<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ansible on Austin Barnes</title>
    <link>https://www.cinderblook.com/tags/ansible/</link>
    <description>Recent content in ansible on Austin Barnes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.cinderblook.com/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible Semaphore - Automating Updates</title>
      <link>https://www.cinderblook.com/blog/ansible-semaphore/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.cinderblook.com/blog/ansible-semaphore/</guid>
      <description>Overview In this blog post, I&amp;rsquo;d like to introduce you to Semaphore, an open-source Ansible management project. With Semaphore, you can automate and keep track of all your Ansible tasks in your homelab. Check out my current Ansible Playbooks in this GitHub repository.
Prerequisites Before we dive into Semaphore, let&amp;rsquo;s ensure you meet the following prerequisites:
Some prior experience with Ansible and understanding of playbook formatting. Ideally, some Docker experience as we&amp;rsquo;ll be using Docker-Compose for the setup.</description>
    </item>
    
    <item>
      <title>Terraform - Azure Server Deploy</title>
      <link>https://www.cinderblook.com/blog/terraform-azure-serv-deploy/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.cinderblook.com/blog/terraform-azure-serv-deploy/</guid>
      <description>Overview Deploy and Configure 4 Windows 2022 Datacenter Servers in Azure.
Using Terraform in conjunction with Ansible and cloudinit: Create 4 Windows Servers Configure them to be a Primary Domain Controller, Replica Domain Controller, DHCP server, and Fileshare server Automate intial setup of the 4 servers to accept Ansible configuration from a Linux VM in Azure created VIA the Terraform deployment Check out all of the configuration files on GitHub (Azure-Serv-Deploy) at the repository!</description>
    </item>
    
    <item>
      <title>Terraform - vSphere Windows Server Deployment</title>
      <link>https://www.cinderblook.com/blog/terraform-vsphere-winserv-deployment/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.cinderblook.com/blog/terraform-vsphere-winserv-deployment/</guid>
      <description>Overview The goal of this project is to deploy a ready-to-go windows server environment. This includes a domain controller, a replica domain controller, a DHCP server, and a fileserver. Additionally setting up users, groups, and OUs for the respective users within the domain. To complete this project, 3 steps are taken.
Use Packer to spin up a sys prepped and fully updated windows server 2022 iso for the environemnt Use Terraform to deploy 4 virtual machines into a vSphere environment Use Ansible to configure these 4 virtual machines as desired Check out all of the configuration files on GitHub (vSphere-WinServ-Deployment) at the repository!</description>
    </item>
    
  </channel>
</rss>

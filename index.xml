<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Austin Barnes</title><link>https://www.cinderblook.com/</link><description>Recent content on Austin Barnes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 04 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.cinderblook.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform - Azure-K8S-Deploy</title><link>https://www.cinderblook.com/projects/terraform-azure-k8s-deploy/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/projects/terraform-azure-k8s-deploy/</guid><description>Overview Deplying a Kubernetes Cluster in Azure with the AKS service.
Build a Kubernetes cluster in Azure Have the cluster setup to automatically scale with load Have Kubeconfig file available so it can be managed, changed, altered, destroyed, etc. Ensure Kubeconfig file is secure, and is being encrypted with traffic involved in this Check out all of the configuration files on GitHub at the repository!
Steps to do this Have an Azure account; if you are a student, sign up for a student account and get some free credits along side it.</description></item><item><title>About</title><link>https://www.cinderblook.com/about/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/about/</guid><description>Hello, and Welcome! I am a tech enthusiast. Professionaly I&amp;rsquo;m a Network Speciliast working at Jersey Shore Area School District, and I am enrolled at Pennsylvania College of Technology in the Network Admnistration and Engineering Bachelor&amp;rsquo;s undergraduate program.
In my free time I like to tackle mini projects of all sort. This site being one of them.
Interests of mine: Information Technology related IaaS with the Terraform platform All things Networking Network Automation Homelab Networking Cloud Networking Dabbling in mostly AWS and Azure cloud Homelab stuff powered by Proxmox and Kubernetes Websites mostly built with Wordpress &amp;amp; Hugo Kubernetes!</description></item><item><title>Sites</title><link>https://www.cinderblook.com/sites/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/sites/</guid><description>Other Sites I have Setup A Custome Home Improvements website, JR Custom Home Improvements</description></item><item><title>K3S - Highly-Available-Rancher</title><link>https://www.cinderblook.com/projects/k3s-highly-available-rancher/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/projects/k3s-highly-available-rancher/</guid><description>Overview Getting started with K3S: The primary goal here is to setup a functional highly available K3S cluster. This will include 4 necessary steps:
Setup NGINX Loadbalancer Docker Setup MySQL Docker Setup Highly Available K3s Cluster (Optional) Setup management from dev machine (Controller) Setup Rancher as a container within the cluster Check out all of the configuration files on GitHub at the repository!
Prerequisites Have a dedicated Docker host virtual machine, preferrably linux Have 5 Linux virtual machines ready Two will be Master Nodes, and Three will be worker nodes.</description></item><item><title>Terraform - Azure-Serv-Deploy</title><link>https://www.cinderblook.com/projects/terraform-azure-serv-deploy/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/projects/terraform-azure-serv-deploy/</guid><description>Overview Deploy and Configure 4 Windows 2022 Datacenter Servers in Azure.
Using Terraform in conjunction with Ansible and cloudinit: Create 4 Windows Servers Configure them to be a Primary Domain Controller, Replica Domain Controller, DHCP server, and Fileshare server Automate intial setup of the 4 servers to accept Ansible configuration from a Linux VM in Azure created VIA the Terraform deployment Check out all of the configuration files on GitHub at the repository!</description></item><item><title>Terraform - vSphere-WinServ-Deployment</title><link>https://www.cinderblook.com/projects/terraform-vsphere-winserv-deployment/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/projects/terraform-vsphere-winserv-deployment/</guid><description>Overview The goal of this project is to deploy a ready-to-go windows server environment. This includes a domain controller, a replica domain controller, a DHCP server, and a fileserver. Additionally setting up users, groups, and OUs for the respective users within the domain. To complete this project, 3 steps are taken.
Use Packer to spin up a sys prepped and fully updated windows server 2022 iso for the environemnt Use Terraform to deploy 4 virtual machines into a vSphere environment Use Ansible to configure these 4 virtual machines as desired Check out all of the configuration files on GitHub at the repository!</description></item><item><title>Terraform - Proxmox-VM-Deploy</title><link>https://www.cinderblook.com/projects/terraform-proxmox-vm-deploy/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.cinderblook.com/projects/terraform-proxmox-vm-deploy/</guid><description>Overview Using Terraform to deploy virtual machines in Proxmox. This is designed with Proxmox Virtual Environment version 7.1 in mind.
Check out all of the configuration files on GitHub at the repository!
Purpose I have a Proxmox server in my homelab, and wanted to have an easier way to spin up virtual machines on an as needed basis.
Prequisites Have a Proxmox server Have a template made on Proxmox, in my case, I used Ubuntu Server 20.</description></item></channel></rss>